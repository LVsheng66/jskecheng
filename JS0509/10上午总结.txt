一、作业：
	1 v字形
		for循环 div的定位（left top的规律 ==>操作符 + * ） if判断
		
	2 选项卡(掌握)：
		自定义索引值==> 循环中的事件函数内部的i值获取问题
		
二、js的数据类型：
	
	js 六大数据类型 （es5):
	 数字类型number  
	 字符串类型 string
	 布尔类型:boolean     true false
	 
	 对象类型:object  (数组[], {}， function(){})
	 
	 两个特殊的类型:
		null  空对象   用来做变量初始化 为null  后续用来存对象
		undefined： 一个变量声明未赋值 值为undefined    var arr = ['hi', '123', true]  console.log( arr[3]); // undefined
		
		
	数字 字符串  布尔 属于简单数据类型 （值类型）
	
	对象类型 复杂数据类型（引用类型）
	
三、数据类型之间的转换
	
	其他类型转数字类型： Number()  ===> NaN 
	
	字符串转数字类型的方法：parseInt()  parseFloat()
	
		扩展：parseInt() 除了接收一个字符串参数, 还可以接收第二个参数 进制 （2，8，16，默认10进制） 用来将对应进制的数据转换成10进制表示
		
	布尔类型的转换 Boolean() 将任何数据转换为布尔值 （true  false）
		if(条件表达式) {  //if语句的小括号 就有隐式转换为布尔值的功能
			
		}else{
			
		}
		
	显式类型转换:很明显 你在调用这些方法 主动去尝试转换数据类型
	
	隐式类型转换: 不知不觉当中 悄悄的(背后帮你转数据类型啦)
	
	练习题：if (5 == num / 2 && (2 + 2 * num).toString() === '22') {
			console.log(true);
		} else {
			console.log(false);
		}
		
四、隐式类型转换
	+  1 数字之间加法运算  2 字符串之间 以及字符串和数字之间 拼接
	
	- * / %  将字符串转换为数字
	
	++ --  将字符串转换为数字
	
	> <    一边为数字 一边为字符串 将字符串转换为数字     （两个字符串比较  是逐位比较 比较它们的编码大小）
	
	！将数据转换为布尔类型

五、NaN not a number 不是一个数字
	一般程序中出现NaN 则说明当前进行了非法运算 
	
	NaN  是数字类型
	
	NaN 自己本身不等于自己
	
	isNaN() 用来 判断 是不是  不是一个数字   （是不是NaN ） 如果是NaN 则是true  如果是数字 则false
	
练习题： 查找一些数据类型 （4个小题）捋一捋

案例： 生成100个div  找规律  
	知识点： for循环   %求模    字符串拼接  
	

今日作业安排：
	重点： 复习前面的所学的内容（讲的一些理论知识 案例）
	选项卡做一遍
	数据类型转换练习
	100小方块==》进阶 鼠标以上小方块隐藏 露出图片
	
	扩展作业：qq列表展示
	