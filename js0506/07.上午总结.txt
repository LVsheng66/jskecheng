一、属性操作补充
	. 做属性操作  ==》[]也可以做属性操作
	
	oBox.style.width = '';
	oBox.style.border = '';
	
	[]==> 可以放变量 来代替属性
	案例：设置属性名和属性值 来设置样式
	oBox.style['width'] = '';
	
	一般情况下 .后面可以直接跟 常规的属性(width color..)
	如果需要用变量来代替 需要用到[]来表示属性
		
二、操作符
	
	1、算术操作符
		+  -  *  /  %（取余 、求模）
		
		一元运算符 ++  --
		
		前置 ++ 先做自增1 然后结果参与运算
		
		后置 ++  先参与运算 后自增1
		
		
		var a = 1; var b = ++a + ++a; console.log(b); 
		var a = 1; var b = a++ + ++a; console.log(b); 
		var a = 1; var b = a++ + a++; console.log(b); 
		var a = 1; var b = ++a + a++; console.log(b); 
		<!-- 
		var a = 1; var b = --a + --a; console.log(b); 
		var a = 1; var b = a-- + --a; console.log(b); 
		var a = 1; var b = a-- + a--; console.log(b); 
		var a = 1; var b = --a + a--; console.log(b); -->
	2、逻辑运算符
		&&与 并且  
			从左 往右 看  先看左边 如果左边为假 直接返回左边的结果；如果左边为真 就去右边看看，右边无论真或者是假，都会返回右边结果
			
		|| 或 或者
			从左 往右 看 先看左边 如果左边为假 去右边看看，有右边无论是真或者假，都返回右边结果；左边如果是真，直接返回左边的结果
		 
		! 非  取反  如果这个数据它本质上是真的或者的假的，取反之后都会转换为相反的布尔值（true,false）
		 
		
	var a = 3 && 0 || 2; 
	var b = 3 || 0 && 2;
	var c= 0 || 2 && 3; 
	alert(a),alert(b),alert(c);
	
	// 面试题 
	var a = 1+1 && 3; 
	var b = 0 && 1+1; 
	var c = 1 || 2 && 3-1; 
	alert(a); 
	alert(b); 
	alert(c);
	
	3、比较运算符
		>  <   >=  <=  == 比较两者是否相等(判断的是值是否相等) !=
		===  !==比较两者是否相等(判断的是值是否相等,还要判断类型是否相等)
		alert( '3' == 3 );//true
		alert( '3' != 3 );//false
		
		alert( '3' === 3 ); //false;
		alert( '3' !== 3 ); //true;
		
	4. 赋值运算符
		+=  -=  *=  /=  %=
		
	5. 优先级从高到底 
		() 优先级最高 
		一元运算符 ++ -- ! 
		算数运算符 先* / % 后 + - 
		关系运算符 > >= < <= 
		相等运算符 == != === !== 
		逻辑运算符 先&& 后|| 
		赋值运算符
	
	练习题:	
	((4 >= 6) || ('人' != '阿凡达')) && !(((12 * 2) == 144) && true) 


		